name: Continuous Integration

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4

      # https://github.com/actions/setup-node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm

      - name: "Build find-duplicate-ids"
        uses: ./.github/workflows/workflow-actions/build
        with:
          action_dir: find-duplicate-ids

      - name: "validate-book-yaml"
        uses: ./.github/workflows/workflow-actions/build
        with:
          action_dir: validate-book-yaml

  test-action:
    name: GitHub Action Tests
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4

      #####
      # find-duplicate-ids
      #####
      - name: "[find-duplicate-ids] Scan only files with no duplicates"
        uses: UCLATALL/actions/find-duplicate-ids@v1
        id: find-duplicate-ids--valid
        with:
          include: ./find-duplicate-ids/test/fixtures/valid/*
          action: error

      - name: "[find-duplicate-ids] Find duplicates in a set of globs"
        uses: UCLATALL/actions/find-duplicate-ids@v1
        id: find-duplicate-ids--duplicates
        continue-on-error: true
        with:
          include: ./find-duplicate-ids/test/**
          action: error

      # https://github.com/actions/github-script
      - name: "[find-duplicate-ids] Test that duplicates were found"
        uses: actions/github-script@v7
        env:
          DUPLICATES: ${{ steps.find-duplicate-ids--duplicates.outputs.duplicates }}
        with:
          script: |
            const assert_equal = (value) => require("node:assert/strict").deepEqual(value, true)
            assert_equal(Object.keys(JSON.parse(process.env['DUPLICATES'])).length !== 0)

      #####
      # validate-book-yaml
      #####
      - name: "[validate-book-yaml] Validate on valid configs"
        uses: UCLATALL/actions/validate-book-yaml@v1
        id: validate-book-yaml--valid
        with:
          include: ./validate-book-yaml/test/fixtures/valid/*

      - name: "[validate-book-yaml] Find error in config"
        uses: UCLATALL/actions/validate-book-yaml@v1
        id: validate-book-yaml--errors
        continue-on-error: true
        with:
          include: ./validate-book-yaml/test/fixtures/missing-name/*
          auto-update: "true"

      # https://github.com/actions/github-script
      - name: "[validate-book-yaml] Test that errors were found"
        uses: actions/github-script@v7
        env:
          ERRORS: ${{ steps.validate-book-yaml--errors.outputs.errors }}
        with:
          script: |
            const assert_equal = (value) => require("node:assert/strict").deepEqual(value, true)
            assert_equal(JSON.parse(process.env['ERRORS']).length !== 0)
